--- Python-2.7.1/Python/dynload_shlib.c.orig  2018-12-24 10:37:13.000000000 +0800
+++ Python-2.7.1/Python/dynload_shlib.c    2018-12-24 10:50:09.000000000 +0800
@@ -65,6 +65,8 @@
 } handles[128];
 static int nhandles = 0;
 
+typedef void* (*fnPyIos_GetLoadFun)(const char* funcname);
+fnPyIos_GetLoadFun PyIos_GetLoadFun = 0;
 
 dl_funcptr _PyImport_GetDynLoadFunc(const char *fqname, const char *shortname,
                                     const char *pathname, FILE *fp)
@@ -84,6 +86,18 @@
     PyOS_snprintf(funcname, sizeof(funcname),
                   LEAD_UNDERSCORE "init%.200s", shortname);
 
+   /* On IOS, dlopen crash as soon as we try to open one of our library.
+    * Instead, we have done a redirection of linking to convert our .so into a
+    * .a.  Then the main executable is linked with theses symbol. So, instead
+    * of trying to dlopen, directly do the dlsym.
+    * -- Mathieu
+    */
+    if (PyIos_GetLoadFun) {
+       return (dl_funcptr)PyIos_GetLoadFun(funcname);
+    }
+    return (dl_funcptr) dlsym(RTLD_SELF, funcname);
+
+#if 0
     if (fp != NULL) {
         int i;
         struct stat statb;
@@ -140,4 +154,5 @@
         handles[nhandles++].handle = handle;
     p = (dl_funcptr) dlsym(handle, funcname);
     return p;
+#endif
 }
